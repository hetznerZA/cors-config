c
cors_result_object
c
n
quit
cors === cors_result_object
quit
cors.to_yaml
cors.to_s
cors.tos
cors
JSON.load(JSON.dump(cors))
JSON.dump(cors)
require 'json'
JSON.dump(cors)
c
cors_result_object
c
quit
Marshal.load(cors_result_object)
quit
Marshal.load(cors_result_object)
Marshall.load(cors_result_object)
cors_result_object
cors
quit
Marshal.dump(cors)
Marshal
Marshall
require 'marshal'
Marshall.dump(cors)
Marshall.dump cors
cors
quit
YAML.load_file('spec/support/success.yml')
quit
cors.to_yaml
cors.to_yaml.split
cors.to_yaml
cors.to_yaml.to_s.strip!
cors.to_yaml.to_s.strip
cors.to_s
cors.to_yaml.s
cors.to_yaml
YAML::parse(cors.to_yaml).children
YAML::parse(cors.to_yaml.strip).children
hash = YAML.load(cors.to_yaml.strip)
hash = YAML.load(cors.to_yaml.strip.split)
hash = YAML.load(cors.to_yaml.strip)
cors.to_yaml
hash = YAML.load(cors.to_yaml)
hash = YAML.load(cors)
hash.inspect
hash.app
hash[app]
hash = YAML.load(cors.to_yaml)
YAML.load(cors.to_yaml)
YAML::parse(cors.to_yaml)
YAML::parse(cors.to_yaml).children
YAML::parse(cors.to_yaml).methods
YAML::parse(cors.to_yaml)
YAML::parse(cors.to_yaml)[0]
YAML::parse(cors.to_yaml)
cors.to_yaml
cors.yaml
test[0]
test = Array[cors]
Array[cors]
cors.to_yaml
cors.yaml
JSON.dump cors
JSON.dump_object
cors.dump_oject
cors.to_json
require 'json'
cors.attributes
cors.instance_variable_get(:all_resources)
cors.instance_variable_get(@all_resources)
cors.instance_variable_get(all_resources)
cors.in
cors.instance_variable_get(:headers)
cors.instance_variable_get('headers')
cors.instance_variables_get('headers')
cors.instance_variables_get(:headers)
cors.instace_variables_get(:headers)
cors.instace_variables_get(:headers0
cors.instace_variables_get
cors.instace_variables
cors.to_yaml.include?('path:')
cors.psych_to_yaml
cors.to_yaml
cors.to_yaml_properties
cors.methods
cors.attributes_name
cors.attributes_names
cors.to_hash
cors.to_h
cors.inspect.class
cors.inspect
cors.to_yaml
cors.debug
cors.resource_for_path
cors.
cors.all_resources
cors..all_resources
cors.instance_variables.all_resources
cors.instance_variables.all_resource
cors.instance_variables
cors.methods
cors.class
c
Rack::Cors.name
Rack::Cor.name
Rack::Cor.nam
Rack::Cors.methods
Rack::Cors
cors.class
cors.display
cors.methods
cors.hash
cors.public_methods
cors.public_instance_methods
cors.inspect
cors.resources
cors.inspect
cors[0]
cors
cors.resource_for_path('/status')
cors.to_yaml
cors.all_resources
cors.allow
cors.methods
cors[:app]
cors['app']
cors.app
cors.headers
cors[headers]
cors
c
quit
config
c
quit
config
c
s
@config
quit
@config
c
n
app
s
n
quit
self.opts
self
opts
@opts
c
@user_config
c
quit
self
config
@config
c
s
c
s
self.all_resources
self.methods
self
c
quit
self
self.opts
opts
c
opts
s
quit
self.inspect
self
opt
opts
c
quit
opts
s
c
s
quit
opts["config"]
opts
s
quit
y
qiut
s
quit
@config
@app
s
c
quit
n
s
quit
self
@config
c
quit
@app
options
opts
config
@config
c
quit
qiut
c
n
s
quit
@config
quit
@app
@config
quit
@config
quit
@config
@config['cors']
quit
e
n
s
n
c
s
@config['cors']
@config
s
n
YAML.load_file(@user_config)
@user_config
n
